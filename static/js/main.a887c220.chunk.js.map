{"version":3,"sources":["components/NavBar.js","components/Main.js","components/MoreInfo.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Container","Nav","className","styled","div","Main","props","Wrapper","SearchInput","htmlFor","type","name","id","value","city","onChange","WeatherResult","Background","Content","Temp","country","City","class","Date","toLocaleString","timeZone","dateStyle","timeStyle","search","temp","MinMax","temp_min","temp_max","SunRiseSet","sunrise","sunset","Cloud","weather","map","cloud","icon","CloudContent","src","alt","description","MoreInfo","Home","useState","setCity","setSearch","setCountry","setWeather","useEffect","a","url","fetch","response","json","result","console","log","main","sys","fetchApi","e","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a887c220.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <Container>\r\n            <Nav>\r\n                <i className=\"fas fa-cloud\"></i>\r\n                <h4>Weather App</h4>\r\n                <i className=\"fas fa-cloud\"></i>\r\n            </Nav>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n`\r\n\r\nconst Nav = styled.div`\r\n    width: 100%;\r\n    height: 70px;\r\n    background-color: rgb(0, 0, 0);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: white;\r\n\r\n    h4 {\r\n        text-transform: uppercase;\r\n        font-size: 30px;\r\n        letter-spacing: 1px;\r\n        margin: 0 15px;\r\n    }\r\n\r\n    i {\r\n        font-size: 30px;\r\n    }\r\n`","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Main(props) {\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <SearchInput>\r\n          <label htmlFor=\"search\">Enter Your City Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"search\"\r\n            id=\"search\"\r\n            value={props.city}\r\n            onChange={props.onChange}\r\n          />\r\n        </SearchInput>\r\n        <WeatherResult>\r\n          <Background></Background>\r\n          <Content>\r\n            <Temp>\r\n              {!props.country ? (\r\n                <h1>{props.city}</h1>\r\n              ) : (\r\n                <City>\r\n                  <i class=\"fas fa-map-marker-alt\"></i>\r\n                  <h1>\r\n                    {props.city}, {props.country.country}\r\n                  </h1>\r\n                </City>\r\n              )}\r\n\r\n              <h4>\r\n                {new Date().toLocaleString(\"en-US\", {\r\n                  timeZone: \"Asia/Kathmandu\",\r\n                  dateStyle: \"full\",\r\n                  timeStyle: \"short\",\r\n                })}\r\n              </h4>\r\n\r\n              {props.search ? (\r\n                <h2>{props.search.temp} &deg;C</h2>\r\n              ) : (\r\n                <h2>City Name Not Found</h2>\r\n              )}\r\n            </Temp>\r\n            <MinMax>\r\n              {props.search ? (\r\n                <>\r\n                  <p>\r\n                    <i className=\"fas fa-temperature-low\"></i> Min. Temp:{\" \"}\r\n                    {props.search.temp_min} &deg;C\r\n                  </p>\r\n                  <p>\r\n                    <i className=\"fas fa-temperature-high\"></i> Max. Temp:{\" \"}\r\n                    {props.search.temp_max} &deg;C\r\n                  </p>\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </MinMax>\r\n            <SunRiseSet>\r\n              {props.country ? (\r\n                <>\r\n                  <p>\r\n                    <i class=\"fas fa-cloud-sun\"></i> Sunrise:{\" \"}\r\n                    {new Date(props.country.sunrise).toLocaleString(\"en-US\", {\r\n                      timeStyle: \"short\",\r\n                    })}\r\n                  </p>\r\n                  <p>\r\n                    <i class=\"fas fa-cloud-sun\"></i> Sunset:{\" \"}\r\n                    {new Date(props.country.sunset).toLocaleString(\"en-US\", {\r\n                      timeStyle: \"short\",\r\n                    })}\r\n                  </p>\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </SunRiseSet>\r\n            <Cloud>\r\n              {props.weather\r\n                ? props.weather.map((cloud, id) => {\r\n                    const icon = `http://openweathermap.org/img/w/${cloud.icon}.png`;\r\n                    return (\r\n                      <CloudContent key={cloud.id}>\r\n                        <img src={icon} alt=\"weather-icon\" />\r\n                        <p>{cloud.description}</p>\r\n                      </CloudContent>\r\n                    );\r\n                  })\r\n                : \"\"}\r\n            </Cloud>\r\n          </Content>\r\n        </WeatherResult>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n\r\nconst Container = styled.div`\r\n  color: #fff;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n  margin: 100px auto;\r\n`;\r\n\r\nconst SearchInput = styled.div`\r\n  width: 80%;\r\n  margin: auto;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  color: #fff;\r\n\r\n  input {\r\n    height: 40px;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    border: none;\r\n    outline: none;\r\n    padding: 0 10px;\r\n    font-size: 15px;\r\n    margin: 10px auto;\r\n  }\r\n`;\r\n\r\nconst WeatherResult = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  margin: 50px auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  height: 700px;\r\n  background-image: url(\"https://st4.depositphotos.com/11221732/27367/i/450/depositphotos_273671996-stock-photo-blue-day-clear-sky-light.jpg\");\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n  box-shadow: 0 1px 5px 2px rgba(255, 255, 255, 0.5);\r\n  position: relative;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, 0%);\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n\r\nconst Temp = styled.div`\r\n  margin-top: 50px;\r\n  width: 100%;\r\n\r\n  h1 {\r\n    font-size: 50px;\r\n    text-transform: capitalize;\r\n    font-weight: 300;\r\n  }\r\n\r\n  h4 {\r\n    font-size: 30px;\r\n    font-weight: 300;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 60px;\r\n    font-weight: 300;\r\n  }\r\n`;\r\n\r\nconst City = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  i {\r\n    font-size: 50px;\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n\r\nconst MinMax = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n\r\n  p {\r\n    padding: 0 20px;\r\n    font-size: 20px;\r\n    letter-spacing: 1px;\r\n    font-weight: 600;\r\n\r\n    i {\r\n      font-size: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SunRiseSet = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 20px auto;\r\n\r\n  p {\r\n    margin: 0 10px;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst Cloud = styled.div`\r\n  margin: 30px auto;\r\n  width: 100%;\r\n\r\n  i {\r\n    font-size: 30px;\r\n    margin: 0 10px;\r\n  }\r\n\r\n  p {\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nconst CloudContent = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction MoreInfo() {\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        Ipsum irure nulla non ad quis consequat minim. Adipisicing in aliqua\r\n        Lorem do dolore adipisicing amet cupidatat deserunt. Aliquip cillum\r\n        nostrud incididunt reprehenderit. Dolor ullamco reprehenderit enim anim\r\n        pariatur esse est labore cupidatat irure voluptate ut officia qui.\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MoreInfo;\r\nconst Container = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 80%;\r\n  margin: auto;\r\n  background-color: #fff;\r\n  box-shadow: 0 1px 5px 2px rgba(255, 255, 255, 0.5);\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Main from \"./Main\";\r\nimport MoreInfo from \"./MoreInfo\";\r\n\r\nfunction Home() {\r\n  const [city, setCity] = useState(\"Kathmandu\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [weather, setWeather] = useState(\"\");\r\n\r\n  const onInputChange = (e) => {\r\n    setCity(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      let url = `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=909f316fd27d1e1d18b99d8dbea246c6`;\r\n      const response = await fetch(url);\r\n      const result = await response.json();\r\n      console.log(result);\r\n      setSearch(result.main);\r\n      setCountry(result.sys);\r\n      setWeather(result.weather);\r\n    };\r\n    // const fetchApi2 = async () => {\r\n    //     let url2 = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=909f316fd27d1e1d18b99d8dbea246c6`\r\n    //         const response2 = await fetch(url2);\r\n    //         const result2 = await response2.json();\r\n    //         console.log(result2);\r\n    // }\r\n    fetchApi();\r\n    // fetchApi2();\r\n  }, [city]);\r\n\r\n  return (\r\n    <Container>\r\n      <Main\r\n        onChange={onInputChange}\r\n        search={search}\r\n        city={city}\r\n        country={country}\r\n        weather={weather}\r\n      />\r\n      <MoreInfo />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n","import \"./App.css\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Home from \"./components/Home\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar />\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}